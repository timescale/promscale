image: timescale/timescale-prometheus
# number of connector pods to spawn
replicaCount: 1
# connection options to connect to a target db
connection:
  # user used to connect to TimescaleDB
  user: postgres
  password:
    # the template for generating the name of
    # a Secret object containing the password to
    # connect to TimescaleDB. The password should
    # be indexed by the user name (connection.user)
    secretTemplate: "{{ .Release.Name }}-timescaledb-passwords"
  host:
    # the template for generating the database host
    # location
    # for a hardcoded host name from another release, set:
    #   nameTemplate: "{{ already-deployed-timescale.default.svc.cluster.local }}"
    # for a host name of a timescaledb instance
    # deployed in the same release (without a cluster override) set:
    #   nameTemplate: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
    nameTemplate: "{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
  port: 5432
  # database name in which to store the metrics
  # must be created before start
  dbName: timescale


# settings for the service to be created that will expose
# the timescale-prometheus deployment
service:
  port: 9201
  loadBalancer:
    # If not enabled, we still expose the connector using a so called Headless Service
    # https://kubernetes.io/docs/concepts/services-networking/service/#headless-services
    enabled: true
    # Read more about the AWS annotations here:
    # https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/#aws
    # https://docs.aws.amazon.com/eks/latest/userguide/load-balancing.html
    annotations:
      # Setting idle-timeout to the maximum allowed value
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"

      # service.beta.kubernetes.io/aws-load-balancer-type: nlb            # Use an NLB instead of ELB
      # service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0  # Internal Load Balancer

# settings for the drop-chunk CronJob that deletes data outside of
# the retention period
dropChunk:
  schedule: "0,30 * * * *"

# set your own limits
resources: {}
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}