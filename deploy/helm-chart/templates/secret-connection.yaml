{{ if eq .Values.connectionSecretName "" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "promscale.fullname" . }}
  namespace: {{ template "promscale.namespace" . }}
  labels:
{{ include "promscale-helm.labels" . | indent 4 }}
stringData:
  {{- if ne (.Values.connection.uri | toString) "" }}
  PROMSCALE_DB_URI: {{ tpl .Values.connection.uri . | toString | quote }}
  {{- else }}
  {{- /* password and user can be set conditionally to allow potential password injection from other sources */}}
  {{- if ne (.Values.connection.password | toString) "" }}
  PROMSCALE_DB_PASSWORD: {{ .Values.connection.password | toString | quote }}
  {{- end }}
  {{- if ne (.Values.connection.user | toString) "" }}
  PROMSCALE_DB_USER: {{ .Values.connection.user | toString | quote }}
  {{- end }}
  PROMSCALE_DB_PORT: {{ .Values.connection.port | toString | quote }}
  PROMSCALE_DB_HOST: {{ tpl .Values.connection.host . | toString | quote }}
  PROMSCALE_DB_NAME: {{ .Values.connection.dbName | toString | quote }}
  PROMSCALE_DB_SSL_MODE: {{ .Values.connection.sslMode | toString | quote }}
  {{- end }}
{{- /*
  During upgrades we want to preserve password and user set from other sources.
  This is done in `data` field as Secrets are base64 encoded and it is easier to not decode them and place in `stringData` field.
*/}}
{{- if .Release.IsUpgrade }}
data:
  {{- if eq (.Values.connection.password | toString) "" }}
  PROMSCALE_DB_PASSWORD: {{ index (lookup "v1" "Secret" .Release.Namespace (include "promscale.fullname" .) ).data "PROMSCALE_DB_PASSWORD" }}
  {{- end }}
  {{- if eq (.Values.connection.user | toString) "" }}
  PROMSCALE_DB_USER: {{ index (lookup "v1" "Secret" .Release.Namespace (include "promscale.fullname" .) ).data "PROMSCALE_DB_USER" }}
  {{- end }}
{{- end }}
{{ end }}
