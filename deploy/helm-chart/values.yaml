image:
  repository: timescale/promscale
  tag: "{{ .Chart.AppVersion }}"
  pullPolicy: IfNotPresent

# number of connector pods to spawn
replicaCount: 1

# Override the deployment namespace
namespaceOverride: ""

# Promscale deployment upgrade strategy
# as Promscale upgrade requires no existing Promscale
# connected with TimescaleDB. Recreate strategy helps
# scale down to 0 and recreate the new version.
upgradeStrategy: Recreate


# Arguments that will be passed onto deployment pods
# The list of available cli flags is available at
# https://github.com/timescale/promscale/blob/master/docs/cli.md

# For example, to activate HA, bump the replicaCount and set those arguments (also, make sure that external labels are configured on the Prometheus side):
# - --high-availabiliity=1
# More info about HA: https://github.com/timescale/promscale/blob/master/docs/high-avaliability/prometheus-HA.md
extraArgs: []

# Environment variables that will be passed onto deployment pods
extraEnv: []

# Environment variables that will be passed onto deployment pods
# Allows reference of secrets
extraEnvFrom: []

# Annotations to be added to the promscale Deployment
annotations: {}

# Annotations to be added to the promscale Pods
podAnnotations: {}

# selector used to provision your own Secret containing connection details
# Use this option with caution
connectionSecretName: ""

# connection options to connect to a target db
connection:
  # Database connection settings. If `uri` is not
  # set then the specific user, pass, host, port and
  # sslMode properties are used.
  uri: ""
  # user used to connect to TimescaleDB
  user: ""
  password: ""
  host: "timescaledb.{{ .Release.Namespace }}.svc.cluster.local"
  port: 5432
  sslMode: require
  # database name in which to store the metrics
  # must be created before start
  dbName: tsdb

# promscale configuration options. Values presented in this section are defaults. For full list of settings
# and their default values go to https://github.com/timescale/promscale/blob/master/docs/configuration.md
# Note that configuration options set here can be overriden by extraEnv as well as extraArgs.
# Arguments passed in extraArgs take precedence over any other option.
config:
  startup.dataset.config: |
    metrics:
      compress_data: true
      default_retention_period: 90d
    traces:
      default_retention_period: 30d

# Enable ServiceMonitor used by prometheus-operator to configure prometheus for metrics scraping
# Enabling this disables prometheus annotation-based scraping
serviceMonitor:
  enabled: false

# settings for the service to be created that will expose
# the promscale deployment
service:
  type: "ClusterIP"
  # Read more about the AWS annotations here:
  # https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/#aws
  # https://docs.aws.amazon.com/eks/latest/userguide/load-balancing.html
  annotations: {}
    # Setting idle-timeout to the maximum allowed value
    # service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb            # Use an NLB instead of ELB
    # service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0  # Internal Load Balancer

  # Set port to receive prometheus remote_write data
  prometheus:
    enabled: true
    port: 9201

  # Set port to receive OpenTelemetry data
  openTelemetry:
    enabled: true
    port: 9202

# set your own limits
resources: {}

# set a custom readiness probe e.g. when basic auth is enabled
# readinessProbe:
#   httpGet: null
#   exec:
#     command:
#     - sh
#     - -c
#     - |-
#       status_code=$(wget --server-response "http://${PROMSCALE_WEB_AUTH_USERNAME}:${PROMSCALE_WEB_AUTH_PASSWORD}@localhost:9201/healthz" 2>&1 | awk '/^  HTTP/{print $2}');
#       if [[ "${status_code}" == "200" ]]; then exit 0; else exit 1; fi
readinessProbe:
  httpGet:
    path: /healthz
    port: metrics-port
    scheme: HTTP
  failureThreshold: 3
  timeoutSeconds: 15
  periodSeconds: 15

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

# https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
